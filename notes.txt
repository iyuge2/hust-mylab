1) C语言中当用二维指针作为函数参数进行传递时,有下面常见的两种方式.//注意*和[]的左结合性质
    [1] void func(int (*a)[2]);//只能接收n行2列的数组
    [2] void func(int *a[]);//可以接收n行n列的数组,不过,在调用时,需要对实参进行修改.
        eg:
            int a[5][5];
            int *p[5];
            for(int j = 0;j < 5;++j){
                p[j] = a[j];
            }
            func(p);

2) char*用常量字符串初始化时，不能再对其进行修改
    eg: char* s = "hello";
        s[0] = 'H'; //× 虽然编译时可以通过，但在运行时会报错
    可以理解成用常量字符串初始化时，s的类型变成const char*
        const char *s;//限定s指向的位置是只读的，这种限定将跟随s一生，可以理解成是s的类型，而不是其指向位置的类型

3) int (*a)[2];//定义一个行指针a,其指向一个若n行2列的数组，动态分配内存的方式为a = new int[n][2];
   int *a[2];//声明一个大小为2的数组，数组中每个元素都是一个指针。
